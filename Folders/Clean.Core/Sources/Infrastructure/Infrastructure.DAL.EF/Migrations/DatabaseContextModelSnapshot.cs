// <auto-generated />
using System;
using $safeprojectname$;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace $safeprojectname$.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core.Model.FailedTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2019, 9, 17, 10, 32, 58, 867, DateTimeKind.Unspecified).AddTicks(1603), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<bool>("NewsletterOptin");

                    b.Property<Guid?>("ParticipationId");

                    b.Property<bool>("TermsConsent");

                    b.Property<byte[]>("TimeStamp");

                    b.HasKey("Id");

                    b.HasIndex("ParticipationId");

                    b.ToTable("FailedTransaction");
                });

            modelBuilder.Entity("Core.Model.Participant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConsumerId");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2019, 9, 17, 10, 32, 58, 871, DateTimeKind.Unspecified).AddTicks(2386), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<string>("EmailHash")
                        .IsRequired()
                        .HasMaxLength(450);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<Guid?>("ParticipationId");

                    b.Property<byte[]>("TimeStamp");

                    b.HasKey("Id");

                    b.HasIndex("EmailHash")
                        .HasName("IX_Participant_EmailHash");

                    b.HasIndex("ParticipationId");

                    b.ToTable("Participant");
                });

            modelBuilder.Entity("Core.Model.Participation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ApiMessage");

                    b.Property<string>("ApiStatus");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2019, 9, 17, 10, 32, 58, 874, DateTimeKind.Unspecified).AddTicks(2825), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<Guid?>("SiteId");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<byte[]>("TimeStamp");

                    b.HasKey("Id");

                    b.HasIndex("SiteId");

                    b.HasIndex("Status")
                        .HasName("IX_Participation_Status");

                    b.ToTable("Participation");
                });

            modelBuilder.Entity("Core.Model.Site", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2019, 9, 17, 10, 32, 58, 877, DateTimeKind.Unspecified).AddTicks(2058), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<string>("Culture")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Domain")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<string>("Name");

                    b.Property<byte[]>("TimeStamp");

                    b.HasKey("Id");

                    b.HasIndex("Culture")
                        .HasName("IX_Site_Culture");

                    b.HasIndex("Domain")
                        .HasName("IX_Site_Domain");

                    b.ToTable("Site");
                });

            modelBuilder.Entity("Core.Model.FailedTransaction", b =>
                {
                    b.HasOne("Core.Model.Participation", "Participation")
                        .WithMany()
                        .HasForeignKey("ParticipationId");
                });

            modelBuilder.Entity("Core.Model.Participant", b =>
                {
                    b.HasOne("Core.Model.Participation", "Participation")
                        .WithMany()
                        .HasForeignKey("ParticipationId");
                });

            modelBuilder.Entity("Core.Model.Participation", b =>
                {
                    b.HasOne("Core.Model.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId");
                });
#pragma warning restore 612, 618
        }
    }
}
